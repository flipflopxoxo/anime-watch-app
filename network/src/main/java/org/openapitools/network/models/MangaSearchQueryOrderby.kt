/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.network.models


import com.google.gson.annotations.SerializedName

/**
 * Available Manga order_by properties
 *
 * Values: mal_id,title,start_date,end_date,chapters,volumes,score,scored_by,rank,popularity,members,favorites
 */

enum class MangaSearchQueryOrderby(val value: kotlin.String) {

    @SerializedName(value = "mal_id")
    mal_id("mal_id"),

    @SerializedName(value = "title")
    title("title"),

    @SerializedName(value = "start_date")
    start_date("start_date"),

    @SerializedName(value = "end_date")
    end_date("end_date"),

    @SerializedName(value = "chapters")
    chapters("chapters"),

    @SerializedName(value = "volumes")
    volumes("volumes"),

    @SerializedName(value = "score")
    score("score"),

    @SerializedName(value = "scored_by")
    scored_by("scored_by"),

    @SerializedName(value = "rank")
    rank("rank"),

    @SerializedName(value = "popularity")
    popularity("popularity"),

    @SerializedName(value = "members")
    members("members"),

    @SerializedName(value = "favorites")
    favorites("favorites");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is MangaSearchQueryOrderby) "$data" else null

        /**
         * Returns a valid [MangaSearchQueryOrderby] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): MangaSearchQueryOrderby? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}


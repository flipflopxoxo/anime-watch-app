/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.network.models

import com.google.gson.annotations.SerializedName

/**
 * Full anime Resource
 *
 * @param malId MyAnimeList ID
 * @param url MyAnimeList URL
 * @param images 
 * @param trailer 
 * @param approved Whether the entry is pending approval on MAL or not
 * @param titles All titles
 * @param title Title
 * @param titleEnglish English Title
 * @param titleJapanese Japanese Title
 * @param titleSynonyms Other Titles
 * @param type Anime Type
 * @param source Original Material/Source adapted from
 * @param episodes Episode count
 * @param status Airing status
 * @param airing Airing boolean
 * @param aired 
 * @param duration Parsed raw duration
 * @param rating Anime audience rating
 * @param score Score
 * @param scoredBy Number of users
 * @param rank Ranking
 * @param popularity Popularity
 * @param members Number of users who have added this entry to their list
 * @param favorites Number of users who have favorited this entry
 * @param synopsis Synopsis
 * @param background Background
 * @param season Season
 * @param year Year
 * @param broadcast 
 * @param producers 
 * @param licensors 
 * @param studios 
 * @param genres 
 * @param explicitGenres 
 * @param themes 
 * @param demographics 
 * @param relations 
 * @param theme 
 * @param `external` 
 * @param streaming 
 */


data class AnimeFull (

    /* MyAnimeList ID */
    @SerializedName("mal_id")
    val malId: kotlin.Int? = null,

    /* MyAnimeList URL */
    @SerializedName("url")
    val url: kotlin.String? = null,

    @SerializedName("images")
    val images: AnimeImages? = null,

    @SerializedName("trailer")
    val trailer: TrailerBase? = null,

    /* Whether the entry is pending approval on MAL or not */
    @SerializedName("approved")
    val approved: kotlin.Boolean? = null,

    /* All titles */
    @SerializedName("titles")
    val titles: kotlin.collections.List<Title>? = null,

    /* Title */
    @SerializedName("title")
    @Deprecated(message = "This property is deprecated.")
    val title: kotlin.String? = null,

    /* English Title */
    @SerializedName("title_english")
    @Deprecated(message = "This property is deprecated.")
    val titleEnglish: kotlin.String? = null,

    /* Japanese Title */
    @SerializedName("title_japanese")
    @Deprecated(message = "This property is deprecated.")
    val titleJapanese: kotlin.String? = null,

    /* Other Titles */
    @SerializedName("title_synonyms")
    @Deprecated(message = "This property is deprecated.")
    val titleSynonyms: kotlin.collections.List<kotlin.String>? = null,

    /* Anime Type */
    @SerializedName("type")
    val type: AnimeFull.Type? = null,

    /* Original Material/Source adapted from */
    @SerializedName("source")
    val source: kotlin.String? = null,

    /* Episode count */
    @SerializedName("episodes")
    val episodes: kotlin.Int? = null,

    /* Airing status */
    @SerializedName("status")
    val status: AnimeFull.Status? = null,

    /* Airing boolean */
    @SerializedName("airing")
    val airing: kotlin.Boolean? = null,

    @SerializedName("aired")
    val aired: Daterange? = null,

    /* Parsed raw duration */
    @SerializedName("duration")
    val duration: kotlin.String? = null,

    /* Anime audience rating */
    @SerializedName("rating")
    val rating: AnimeFull.Rating? = null,

    /* Score */
    @SerializedName("score")
    val score: kotlin.Float? = null,

    /* Number of users */
    @SerializedName("scored_by")
    val scoredBy: kotlin.Int? = null,

    /* Ranking */
    @SerializedName("rank")
    val rank: kotlin.Int? = null,

    /* Popularity */
    @SerializedName("popularity")
    val popularity: kotlin.Int? = null,

    /* Number of users who have added this entry to their list */
    @SerializedName("members")
    val members: kotlin.Int? = null,

    /* Number of users who have favorited this entry */
    @SerializedName("favorites")
    val favorites: kotlin.Int? = null,

    /* Synopsis */
    @SerializedName("synopsis")
    val synopsis: kotlin.String? = null,

    /* Background */
    @SerializedName("background")
    val background: kotlin.String? = null,

    /* Season */
    @SerializedName("season")
    val season: AnimeFull.Season? = null,

    /* Year */
    @SerializedName("year")
    val year: kotlin.Int? = null,

    @SerializedName("broadcast")
    val broadcast: Broadcast? = null,

    @SerializedName("producers")
    val producers: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("licensors")
    val licensors: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("studios")
    val studios: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("genres")
    val genres: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("explicit_genres")
    val explicitGenres: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("themes")
    val themes: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("demographics")
    val demographics: kotlin.collections.List<MalUrl>? = null,

    @SerializedName("relations")
    val relations: kotlin.collections.List<AnimeFullRelationsInner>? = null,

    @SerializedName("theme")
    val theme: AnimeFullTheme? = null,

    @SerializedName("external")
    val `external`: kotlin.collections.List<AnimeFullExternalInner>? = null,

    @SerializedName("streaming")
    val streaming: kotlin.collections.List<AnimeFullExternalInner>? = null

) {

    /**
     * Anime Type
     *
     * Values: TV,OVA,Movie,Special,ONA,Music
     */
    enum class Type(val value: kotlin.String) {
        @SerializedName(value = "TV") TV("TV"),
        @SerializedName(value = "OVA") OVA("OVA"),
        @SerializedName(value = "Movie") Movie("Movie"),
        @SerializedName(value = "Special") Special("Special"),
        @SerializedName(value = "ONA") ONA("ONA"),
        @SerializedName(value = "Music") Music("Music");
    }
    /**
     * Airing status
     *
     * Values: Finished_Airing,Currently_Airing,Not_yet_aired
     */
    enum class Status(val value: kotlin.String) {
        @SerializedName(value = "Finished Airing") Finished_Airing("Finished Airing"),
        @SerializedName(value = "Currently Airing") Currently_Airing("Currently Airing"),
        @SerializedName(value = "Not yet aired") Not_yet_aired("Not yet aired");
    }
    /**
     * Anime audience rating
     *
     * Values: G_Minus_All_Ages,PG_Minus_Children,PGMinus13_Minus_Teens_13_or_older,R_Minus_17Plus_Left_ParenthesisViolence_Ampersand_profanityRight_Parenthesis,RPlus_Minus_Mild_Nudity,Rx_Minus_Hentai
     */
    enum class Rating(val value: kotlin.String) {
        @SerializedName(value = "G - All Ages") G_Minus_All_Ages("G - All Ages"),
        @SerializedName(value = "PG - Children") PG_Minus_Children("PG - Children"),
        @SerializedName(value = "PG-13 - Teens 13 or older") PGMinus13_Minus_Teens_13_or_older("PG-13 - Teens 13 or older"),
        @SerializedName(value = "R - 17+ (violence & profanity)") R_Minus_17Plus_Left_ParenthesisViolence_Ampersand_profanityRight_Parenthesis("R - 17+ (violence & profanity)"),
        @SerializedName(value = "R+ - Mild Nudity") RPlus_Minus_Mild_Nudity("R+ - Mild Nudity"),
        @SerializedName(value = "Rx - Hentai") Rx_Minus_Hentai("Rx - Hentai");
    }
    /**
     * Season
     *
     * Values: summer,winter,spring,fall
     */
    enum class Season(val value: kotlin.String) {
        @SerializedName(value = "summer") summer("summer"),
        @SerializedName(value = "winter") winter("winter"),
        @SerializedName(value = "spring") spring("spring"),
        @SerializedName(value = "fall") fall("fall");
    }

}

